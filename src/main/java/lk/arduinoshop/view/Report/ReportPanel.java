/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package lk.arduinoshop.view.Report;

import java.awt.Font;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import lk.arduinoshop.controller.ReportController;
import lk.arduinoshop.model.SalesDTO;

/**
 *
 * @author Iyona Chithrasena
 */
public class ReportPanel extends javax.swing.JPanel {

    private  ArrayList<SalesDTO> printList=null;
    public ReportPanel() {
        initComponents();
        allProductsTable.setAutoCreateRowSorter(true);
        allProductsTable.getTableHeader().setFont(new Font("Arial", Font.BOLD, 18));

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        allProdcutsLabel = new javax.swing.JLabel();
        outOfStockLabel = new javax.swing.JLabel();
        lowStockLabel = new javax.swing.JLabel();
        mostStockLable = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        printButton = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        allProductsTable = new javax.swing.JTable();
        tableHeadingLabel = new javax.swing.JLabel();
        salesButton = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setMaximumSize(new java.awt.Dimension(1160, 538));
        setMinimumSize(new java.awt.Dimension(1160, 538));

        allProdcutsLabel.setBackground(new java.awt.Color(204, 102, 255));
        allProdcutsLabel.setFont(new java.awt.Font("Verdana", 1, 20)); // NOI18N
        allProdcutsLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        allProdcutsLabel.setText("All Products");
        allProdcutsLabel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        allProdcutsLabel.setOpaque(true);
        allProdcutsLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                allProdcutsLabelMouseClicked(evt);
            }
        });

        outOfStockLabel.setBackground(new java.awt.Color(255, 102, 102));
        outOfStockLabel.setFont(new java.awt.Font("Verdana", 1, 20)); // NOI18N
        outOfStockLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        outOfStockLabel.setText("Out of Stock");
        outOfStockLabel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        outOfStockLabel.setOpaque(true);
        outOfStockLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                outOfStockLabelMouseClicked(evt);
            }
        });

        lowStockLabel.setBackground(new java.awt.Color(255, 153, 255));
        lowStockLabel.setFont(new java.awt.Font("Verdana", 1, 20)); // NOI18N
        lowStockLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lowStockLabel.setText("Low Stock ");
        lowStockLabel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        lowStockLabel.setOpaque(true);
        lowStockLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lowStockLabelMouseClicked(evt);
            }
        });

        mostStockLable.setBackground(new java.awt.Color(255, 153, 51));
        mostStockLable.setFont(new java.awt.Font("Verdana", 1, 20)); // NOI18N
        mostStockLable.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        mostStockLable.setText("Most Stock");
        mostStockLable.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        mostStockLable.setOpaque(true);
        mostStockLable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mostStockLableMouseClicked(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Verdana", 1, 36)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 102, 204));
        jLabel9.setText("Summery Reports");

        printButton.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        printButton.setForeground(new java.awt.Color(0, 51, 102));
        printButton.setIcon(new javax.swing.ImageIcon("C:\\Users\\Iyona Chithrasena\\Documents\\NetBeansProjects\\MyNewArduinoshop\\src\\main\\java\\Images\\print (1).png")); // NOI18N
        printButton.setText("Print");
        printButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printButtonActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        allProductsTable.setFont(new java.awt.Font("Verdana", 0, 16)); // NOI18N
        allProductsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Date", "OrderID", "OderPrice"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(allProductsTable);
        if (allProductsTable.getColumnModel().getColumnCount() > 0) {
            allProductsTable.getColumnModel().getColumn(0).setMinWidth(150);
            allProductsTable.getColumnModel().getColumn(0).setPreferredWidth(150);
            allProductsTable.getColumnModel().getColumn(0).setMaxWidth(150);
            allProductsTable.getColumnModel().getColumn(1).setMinWidth(100);
            allProductsTable.getColumnModel().getColumn(1).setPreferredWidth(100);
            allProductsTable.getColumnModel().getColumn(1).setMaxWidth(100);
        }

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1034, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 245, Short.MAX_VALUE)
        );

        tableHeadingLabel.setBackground(new java.awt.Color(51, 0, 204));
        tableHeadingLabel.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        tableHeadingLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        tableHeadingLabel.setText("                         ");

        salesButton.setFont(new java.awt.Font("Verdana", 1, 16)); // NOI18N
        salesButton.setText("Sales");
        salesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salesButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(461, 461, 461)
                        .addComponent(tableHeadingLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(108, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(allProdcutsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(123, 123, 123)
                        .addComponent(lowStockLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 409, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(outOfStockLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(123, 123, 123)
                        .addComponent(mostStockLable, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(23, 23, 23))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(salesButton, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(88, 88, 88))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(printButton)
                .addGap(120, 120, 120))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(salesButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(49, 49, 49)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(allProdcutsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lowStockLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(outOfStockLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mostStockLable, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addComponent(tableHeadingLabel)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(printButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void allProdcutsLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_allProdcutsLabelMouseClicked
        ArrayList<SalesDTO> itemList = (ArrayList<SalesDTO>) ReportController.getProdcutDTOList();
        DefaultTableModel tableModel = (DefaultTableModel) allProductsTable.getModel();
        tableModel.setRowCount(0);
        Object rowData[] = new Object[5];
        for (int i = 0; i < itemList.size(); i++) {
            rowData[0] = i + 1;
            rowData[1] = itemList.get(i).getProductId();
            rowData[2] = itemList.get(i).getProductName();
            rowData[3] = itemList.get(i).getCurrentQuantity();
            tableModel.addRow(rowData);
        }
        printList=itemList;
        tableHeadingLabel.setText(allProdcutsLabel.getText());
    }//GEN-LAST:event_allProdcutsLabelMouseClicked

    private void lowStockLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lowStockLabelMouseClicked
        ArrayList<SalesDTO> itemList = (ArrayList<SalesDTO>) ReportController.getLowStockProductList();
        DefaultTableModel tableModel = (DefaultTableModel) allProductsTable.getModel();
        tableModel.setRowCount(0);
        Object rowData[] = new Object[5];
        for (int i = 0; i < itemList.size(); i++) {
            rowData[0] = i + 1;
            rowData[1] = itemList.get(i).getProductId();
            rowData[2] = itemList.get(i).getProductName();
            rowData[3] = itemList.get(i).getCurrentQuantity();
            tableModel.addRow(rowData);
        }
        printList=itemList;
        tableHeadingLabel.setText(lowStockLabel.getText());
    }//GEN-LAST:event_lowStockLabelMouseClicked

    private void mostStockLableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mostStockLableMouseClicked
        ArrayList<SalesDTO> itemList = (ArrayList<SalesDTO>) ReportController.getMostStockProductList();
        DefaultTableModel tableModel = (DefaultTableModel) allProductsTable.getModel();
        tableModel.setRowCount(0);
        Object rowData[] = new Object[5];
        for (int i = 0; i < itemList.size(); i++) {
            rowData[0] = i + 1;
            rowData[1] = itemList.get(i).getProductId();
            rowData[2] = itemList.get(i).getProductName();
            rowData[3] = itemList.get(i).getCurrentQuantity();
            tableModel.addRow(rowData);
        }
        printList=itemList;
        tableHeadingLabel.setText(mostStockLable.getText());
    }//GEN-LAST:event_mostStockLableMouseClicked

    private void outOfStockLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_outOfStockLabelMouseClicked
        ArrayList<SalesDTO> itemList = (ArrayList<SalesDTO>) ReportController.getOutOfStockProductList();
        DefaultTableModel tableModel = (DefaultTableModel) allProductsTable.getModel();
        tableModel.setRowCount(0);
        Object rowData[] = new Object[5];
        for (int i = 0; i < itemList.size(); i++) {
            rowData[0] = i + 1;
            rowData[1] = itemList.get(i).getProductId();
            rowData[2] = itemList.get(i).getProductName();
            rowData[3] = itemList.get(i).getCurrentQuantity();
            tableModel.addRow(rowData);
        }
        printList=itemList;
        tableHeadingLabel.setText(outOfStockLabel.getText());
    }//GEN-LAST:event_outOfStockLabelMouseClicked

    private void printButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printButtonActionPerformed
        try {
            String header=tableHeadingLabel.getText();
            ReportController.generatePDF(printList,header);
        } catch (IOException ex) {
            Logger.getLogger(ReportPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_printButtonActionPerformed

    private void salesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salesButtonActionPerformed
       
        SalesDTO salesDTO= new SalesDTO();
        List<SalesDTO> orderDTOList = ReportController.getAllOrders();

        DefaultTableModel tableModel = (DefaultTableModel) allProductsTable.getModel();
        tableModel.setRowCount(0);
        Object rowData[] = new Object[3];
        for (int i = 0; i < orderDTOList.size(); i++) {
            rowData[0] = orderDTOList.get(i).getDate();
            rowData[1] = orderDTOList.get(i).getOrderId();
            rowData[2] = orderDTOList.get(i).getSellPrice();
            
            
            tableModel.addRow(rowData);
            
        }
    }//GEN-LAST:event_salesButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel allProdcutsLabel;
    private javax.swing.JTable allProductsTable;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lowStockLabel;
    private javax.swing.JLabel mostStockLable;
    private javax.swing.JLabel outOfStockLabel;
    private javax.swing.JButton printButton;
    private javax.swing.JButton salesButton;
    private javax.swing.JLabel tableHeadingLabel;
    // End of variables declaration//GEN-END:variables
}
