/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package lk.arduinoshop.view.Product;

import java.awt.event.KeyEvent;
import java.sql.SQLException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import lk.arduinoshop.controller.CategoryController;
import lk.arduinoshop.model.CategoryDTO;

/**
 *
 * @author Iyona Chithrasena
 */
public class ManageCategoryFrame extends javax.swing.JFrame {

    /**
     * Creates new form AddnewCategoryFrame
     */
    public ManageCategoryFrame() {
        initComponents();
        addDataToTable();

    }

    public void addDataToTable() {
        CategoryDTO categoryDTO = new CategoryDTO();
        List<CategoryDTO> categoryList = CategoryController.getCategoryDTOList();

        DefaultTableModel tableModel = (DefaultTableModel) categoryTable.getModel();
        Object rowData[] = new Object[2];
        for (int i = 0; i < categoryList.size(); i++) {
            rowData[1] = categoryList.get(i).getCategoryName();
            rowData[0] = categoryList.get(i).getCategoryId();
            tableModel.addRow(rowData);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        categoryIDField = new javax.swing.JTextField();
        categoryNameField = new javax.swing.JTextField();
        Edit = new javax.swing.JButton();
        jButtonDeleteManageCategory = new javax.swing.JButton();
        addCategoryButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        categoryTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Verdana", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 51, 153));
        jLabel1.setText("Manage Category");

        jLabel2.setFont(new java.awt.Font("Verdana", 0, 16)); // NOI18N
        jLabel2.setText("Category ID");

        jLabel3.setFont(new java.awt.Font("Verdana", 0, 16)); // NOI18N
        jLabel3.setText("Category Name");

        categoryIDField.setEditable(false);

        categoryNameField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                categoryNameFieldFocusLost(evt);
            }
        });
        categoryNameField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                categoryNameFieldKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                categoryNameFieldKeyTyped(evt);
            }
        });

        Edit.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        Edit.setText("Edit");
        Edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditActionPerformed(evt);
            }
        });

        jButtonDeleteManageCategory.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jButtonDeleteManageCategory.setText("Delete");
        jButtonDeleteManageCategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteManageCategoryActionPerformed(evt);
            }
        });

        addCategoryButton.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        addCategoryButton.setText("Add");
        addCategoryButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCategoryButtonActionPerformed(evt);
            }
        });

        categoryTable.setFont(new java.awt.Font("Verdana", 0, 16)); // NOI18N
        categoryTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Category ID", "CategoryName"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        categoryTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                categoryTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(categoryTable);
        if (categoryTable.getColumnModel().getColumnCount() > 0) {
            categoryTable.getColumnModel().getColumn(0).setMinWidth(100);
            categoryTable.getColumnModel().getColumn(0).setPreferredWidth(100);
            categoryTable.getColumnModel().getColumn(0).setMaxWidth(100);
        }

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(addCategoryButton, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(39, 39, 39)
                        .addComponent(jButtonDeleteManageCategory, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36)
                        .addComponent(Edit, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(categoryNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(87, 87, 87)
                                    .addComponent(categoryIDField, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(61, 61, 61)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(17, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(45, 45, 45)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(592, Short.MAX_VALUE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(61, 61, 61)
                        .addComponent(categoryNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(60, 60, 60)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(categoryIDField, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(102, 102, 102)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Edit, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonDeleteManageCategory, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addCategoryButton, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(44, 44, 44))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(142, 142, 142)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(265, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 422, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonDeleteManageCategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteManageCategoryActionPerformed
        CategoryDTO categoryDTO = new CategoryDTO();
        String idValue;
        DefaultTableModel tableModel = (DefaultTableModel) categoryTable.getModel();
        int selectedRowIndex = categoryTable.getSelectedRow();
        idValue = tableModel.getValueAt(selectedRowIndex, 0).toString();
        String nameValue = tableModel.getValueAt(selectedRowIndex, 1).toString();
        if (idValue != null) {
            int response = JOptionPane.showConfirmDialog(this, "Do you want to delete " + nameValue + " ?", "Confirmation", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
            if (response == JOptionPane.YES_OPTION) {
                categoryDTO.setCategoryId(idValue);
                boolean result = CategoryController.deleteSelectedRow(categoryDTO);
                if (result == true) {
                    tableModel.removeRow(selectedRowIndex);
                    JOptionPane.showMessageDialog(this, nameValue + "  was deleted !");
                    categoryNameField.setText("");
                    categoryIDField.setText("");
                }
            }
        }


    }//GEN-LAST:event_jButtonDeleteManageCategoryActionPerformed

    private void addCategoryButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addCategoryButtonActionPerformed
        DefaultTableModel tableModel = (DefaultTableModel) categoryTable.getModel();
        CategoryDTO categoryDTO = new CategoryDTO();
        categoryDTO.setCategoryName(categoryNameField.getText());
        categoryDTO.setCategoryId(categoryIDField.getText());
        boolean result = false;
        if (!categoryNameField.getText().trim().isEmpty()) {
            result = CategoryController.addNewCategory(categoryDTO);
            if (result) {
                //tableModel.addRow(new Object[]{categoryIDField.getText(),categoryNameField.getText()});
                tableModel.setRowCount(0);
                addDataToTable();
                categoryNameField.setText("");
                categoryIDField.setText("");
                JOptionPane.showMessageDialog(this, "category added successfully", "Confirmation Message", JOptionPane.INFORMATION_MESSAGE);
                categoryIDField.setText("");
            }
        } else {
            JOptionPane.showMessageDialog(this, "category name can not be empty", "Error Message", JOptionPane.ERROR_MESSAGE);

        }


    }//GEN-LAST:event_addCategoryButtonActionPerformed

    private void categoryNameFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_categoryNameFieldKeyPressed

    }//GEN-LAST:event_categoryNameFieldKeyPressed

    private void EditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditActionPerformed

        CategoryDTO categoryDTO = new CategoryDTO();
        String idValue;
        DefaultTableModel tableModel = (DefaultTableModel) categoryTable.getModel();
        int selectedRow = categoryTable.getSelectedRow();
        idValue = tableModel.getValueAt(selectedRow, 0).toString();
        String nameValue = tableModel.getValueAt(selectedRow, 1).toString();

        if (selectedRow > 0 && !nameValue.equals(categoryNameField.getText().trim())) {
            int response = JOptionPane.showConfirmDialog(this, "Do you want to edit " + nameValue + " ?", "Confirmation", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
            if (response == JOptionPane.YES_OPTION) {

                categoryDTO.setCategoryId(categoryIDField.getText());
                categoryDTO.setCategoryName(categoryNameField.getText());
                boolean result = CategoryController.updateSelectedRow(categoryDTO);
                tableModel.setValueAt(categoryNameField.getText(), selectedRow, 1);

                JOptionPane.showMessageDialog(this, nameValue + "  was updatede successfully !");
                categoryNameField.setText("");
                categoryIDField.setText("");
            }
        }

    }//GEN-LAST:event_EditActionPerformed

    private void categoryTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_categoryTableMouseClicked
        DefaultTableModel tableModel = (DefaultTableModel) categoryTable.getModel();
        int selectedRow = categoryTable.getSelectedRow();
        categoryNameField.setText(tableModel.getValueAt(selectedRow, 1).toString());
        categoryIDField.setText(tableModel.getValueAt(selectedRow, 0).toString());
        categoryIDField.setEditable(false);

    }//GEN-LAST:event_categoryTableMouseClicked

    private void categoryNameFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_categoryNameFieldFocusLost

    }//GEN-LAST:event_categoryNameFieldFocusLost

    private void categoryNameFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_categoryNameFieldKeyTyped
        int code = evt.getKeyCode();
        char c = evt.getKeyChar();
        if (!Character.isLetter(c) && code != KeyEvent.VK_BACK_SPACE) {
            evt.consume();
        } else {
           

            if (!categoryNameField.getText().isEmpty()) {
                try {
                    CategoryDTO categoryDTO = new CategoryDTO();
                    categoryDTO.setCategoryName(categoryNameField.getText());
                    String categoryName = categoryNameField.getText();
                    if (!categoryName.trim().isEmpty()) {
                        categoryDTO.setCategoryId(CategoryController.autoID(categoryDTO));
                        categoryIDField.setText(categoryDTO.getCategoryId());
                    }
                } catch (SQLException ex) {
                    Logger.getLogger(ManageCategoryFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_categoryNameFieldKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManageCategoryFrame.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ManageCategoryFrame.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ManageCategoryFrame.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManageCategoryFrame.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ManageCategoryFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Edit;
    private javax.swing.JButton addCategoryButton;
    private javax.swing.JTextField categoryIDField;
    private javax.swing.JTextField categoryNameField;
    private javax.swing.JTable categoryTable;
    private javax.swing.JButton jButtonDeleteManageCategory;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
